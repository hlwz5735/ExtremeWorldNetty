syntax = "proto3";

package com.duke.protobuf.data;

option csharp_namespace = "SkillBridge.Message";
option cc_enable_arenas = true;
option java_multiple_files = false;
option java_outer_classname = "ProtoMessages";

////////////////////////////////////////////////////////////////
//
//  Basic Defines
//
////////////////////////////////////////////////////////////////
enum RESULT
{
    SUCCESS = 0;
    FAILED = 1;
}

enum CHARACTER_TYPE
{
    Player = 0;
    NPC = 1;
    Monster = 2;
}

enum CHARACTER_CLASS
{
    NONE = 0;
    WARRIOR = 1;
    WIZARD = 2;
    ARCHER = 3;
}

enum CHARACTER_STATE
{
    IDLE = 0;
    MOVE = 1;
}

enum ITEM_TYPE {
    // 常规道具
    NORMAL = 0;
    // 材料道具
    MATERIAL = 1;
    // 任务道具
    TASK = 2;
    // 装备
    EQUIP = 3;
    // 坐骑
    MOUNT = 4;
}

/// 装备槽枚举
enum EQUIP_SLOT {
    // 武器
    WEAPON = 0;
    // 副手
    ACCESSORY = 1;
    // 头盔
    HELMET = 2;
    // 胸甲
    CHEST = 3;
    // 肩甲
    SHOULDER = 4;
    // 裤子
    PANTS = 5;
    // 鞋子
    BOOTS = 6;
    // 最大限位
    SLOT_MAX = 7;
}

/// 状态通知相关
//enum STATUS_SOURCE {
//    UPDATE = 0;
//    ADD = 1;
//    DELETE = 2;
//}

// 状态变化通知
message NStatus {
    enum STATUS_ACTION {
        UPDATE = 0;
        ADD = 1;
        DELETE = 2;
    }

    enum STATUS_TYPE {
        MONEY = 0;
        EXP = 1;
        SKILL_POINT = 2;
        ITEM = 3;
    }

    STATUS_TYPE type = 1;
    STATUS_ACTION action = 2;
    int32 id = 3;
    int32 value = 4;
}

message StatusNotify {
    repeated NStatus status = 1;
}

message NItemInfo {
    int32 id = 1;
    int32 count = 2;
}

// 背包数据
message NBagInfo {
    // 解锁了多少个格子
    int32 unlocked = 1;
    // 具体道具数据（二进制）
    bytes items = 2;
}

message NUserInfo {
    int32 id = 1;
    NPlayerInfo player = 2;
}

message NPlayerInfo {
    int32 id = 1;
    repeated NCharacterInfo characters = 2;
}

message NQuestInfo {
    // 任务状态
    enum QUEST_STATUS {
        IN_PROGRESS = 0; // 进行中
        COMPLETED = 1;   // 已完成未提交
        FINISHED = 2;    // 已完成已提交
        FAILED = 3;      // 任务失败
    }

    // 任务ID
    int32 questId = 1;
    // 任务实例ID
    int32 questGuid = 2;
    // 任务状态
    QUEST_STATUS status = 3;
    // 任务目标信息
    repeated int32 targets = 4;
}

message NFriendInfo {
    int32 id = 1;
    NCharacterInfo friendInfo = 2;
    int32 status = 3;
}

message NTeamInfo {
    int32 id = 1;
    int32 leaderId = 2;
    repeated NCharacterInfo members = 3;
}

/**** 工会相关 ****/
/// 工会成员信息
message NGuildMemberInfo {
    enum GUILD_TITLE {
        NONE = 0;
        PRESIDENT = 1;
        VICE_PRESIDENT = 2;
    }
    // DB ID
    int32 id = 1;
    // 成员ID
    int32 characterId = 2;
    // 工会头衔
    GUILD_TITLE title = 3;
    // 成员具体信息
    NCharacterInfo info = 4;
    // 加入时间
    int64 joinTime = 5;
    // 上次登录时间
    int64 lastTime = 6;
    // 在线状态 0不在线，1在线
    int32 status = 7;
}

/// 工会申请信息
message NGuildApplyInfo {
    enum APPLY_RESULT {
        NONE = 0;
        ACCEPTED = 1;
        REJECTED = 2;
    }
    // 所属工会ID
    int32 guildId = 1;
    // 申请人ID
    int32 characterId = 2;
    // 申请人角色名
    string name = 3;
    // 所属职业
    CHARACTER_CLASS clazz = 4;
    // 等级
    int32 level = 5;
    // 审批结果
    APPLY_RESULT result = 6;
}

/// 工会信息
message NGuildInfo {
    // DB ID
    int32 id = 1;
    // 公会名
    string guildName = 2;
    // 会长ID
    int32 leaderId = 3;
    // 会长名
    string leaderName = 4;
    // 公告/宗旨
    string notice = 5;
    // 会员数量
    int32 memberCount = 6;
    // 会员信息
    repeated NGuildMemberInfo members = 7;
    // 申请信息
    repeated NGuildApplyInfo applies = 8;
    // 建会时间
    int64 createTime = 9;
}

message NCharacterInfo {
    // 数据库ID
    int32 id = 1;
    // 配置表ID
    int32 configId = 2;
    // 实体ID
    int32 entityId = 3;
    // 名字
    string name = 4;
    CHARACTER_TYPE type = 5;
    CHARACTER_CLASS class = 6;
    int32 level = 7;
    int32 mapId = 8;
    NEntity entity = 9;
    int64 carriedMoney = 10;
    // 道具信息
    repeated NItemInfo items = 11;
    // 背包信息
    NBagInfo bag = 12;
    // 装备信息（字节数组形式）
    bytes equips = 13;
    // 任务列表信息
    repeated NQuestInfo quests = 14;
    // 好友信息
    repeated NFriendInfo friends = 15;
    NGuildInfo guild = 16;
    // 坐骑的ID
    int32 mountId = 17;
}

message NVector3
{
    int32 x = 1;
    int32 y = 2;
    int32 z = 3;
}

////////////////////////////////////////////////////////////////
//
//  Entities
//
////////////////////////////////////////////////////////////////
message NEntity {
    int32 id = 1;
    NVector3 position = 2;
    NVector3 direction = 3;
    int32 speed = 4;
}

message NEntitySync {
    enum ENTITY_EVENT
    {
        NONE = 0;
        IDLE = 1;
        MOVE_FWD = 2;
        MOVE_BACK = 3;
        JUMP = 4;
        MOUNT = 5;
    }

    int32 id = 1;
    ENTITY_EVENT event = 2;
    NEntity entity = 3;
    int32 param = 4;
}

////////////////////////////////////////////////////////////////
//
//  聊天相关
//
////////////////////////////////////////////////////////////////
message NChatMessage {
    enum CHAT_CHANNEL {
        // 全部
        ALL = 0;
        // 本地
        LOCAL = 1;
        // 世界
        WORLD = 2;
        // 系统
        SYSTEM = 4;
        // 私聊
        PRIVATE = 8;
        // 队伍
        TEAM = 16;
        // 工会
        GUILD = 32;
    }

    CHAT_CHANNEL channel = 1;
    int32 id = 2;
    int32 fromId = 3;
    string fromName = 4;
    int32 toId = 5;
    string toName = 6;
    string message = 7;
    int64 time = 8;
}

////////////////////////////////////////////////////////////////
//
//  Messages
//
////////////////////////////////////////////////////////////////
message NetMessage {
    NetMessageRequest Request = 1;
    NetMessageResponse Response = 2;
}

message NetMessageRequest {
    UserRegisterRequest userRegister = 1;
    UserLoginRequest userLogin = 2;
    UserCreateCharacterRequest createChar = 3;
    UserGameEnterRequest gameEnter = 4;
    UserGameLeaveRequest gameLeave = 5;

    MapCharacterEnterRequest mapCharacterEnter = 6;

    MapEntitySyncRequest mapEntitySync = 8;
    MapTeleportRequest mapTeleport = 9;

    BagSaveRequest bagSave = 10;

    ItemPurchaseRequest itemPurchase = 11;
    ItemEquipRequest itemEquip = 12;
    QuestListRequest questList = 13;
    QuestAcceptRequest questAccept = 14;
    QuestSubmitRequest questSubmit = 15;

    FriendAddRequest friendAddReq = 16;
    FriendAddResponse friendAddRes = 17;
    FriendListRequest friendList = 18;
    FriendRemoveRequest friendRemove = 19;

    TeamInviteRequest teamInviteReq = 20;
    TeamInviteResponse teamInviteRes = 21;
    TeamInfoRequest teamInfo = 22;
    TeamLeaveRequest teamLeave = 23;

    GuildCreateRequest guildCreate = 24;
    GuildJoinRequest guildJoinReq = 25;
    GuildJoinResponse guildJoinRes = 26;
    GuildInfoRequest guildInfo = 27;
    GuildLeaveRequest guildLeave = 28;
    GuildListRequest guildList = 29;
    GuildAdminRequest guildAdmin = 30;

    ChatRequest chat = 31;
}

message NetMessageResponse {
    UserRegisterResponse userRegister = 1;
    UserLoginResponse userLogin = 2;
    UserCreateCharacterResponse createChar = 3;
    UserGameEnterResponse gameEnter = 4;
    UserGameLeaveResponse gameLeave = 5;

    MapCharacterEnterResponse mapCharacterEnter = 6;
    MapCharacterLeaveResponse mapCharacterLeave = 7;
    MapEntitySyncResponse mapEntitySync = 8;

    BagSaveResponse bagSave = 9;

    ItemPurchaseResponse itemPurchase = 10;
    ItemEquipResponse itemEquip = 11;

    QuestListResponse questList = 12;
    QuestAcceptResponse questAccept = 13;
    QuestSubmitResponse questSubmit = 14;

    FriendAddRequest friendAddReq = 15;
    FriendAddResponse friendAddRes = 16;
    FriendListResponse friendList = 17;
    FriendRemoveResponse friendRemove = 18;

    TeamInviteRequest teamInviteReq = 19;
    TeamInviteResponse teamInviteRes = 20;
    TeamInfoResponse teamInfo = 21;
    TeamLeaveResponse teamLeave = 22;

    GuildCreateResponse guildCreate = 23;
    GuildJoinRequest guildJoinReq = 24;
    GuildJoinResponse guildJoinRes = 25;
    GuildInfoResponse guildInfo = 26;
    GuildLeaveResponse guildLeave = 27;
    GuildListResponse guildList = 28;
    GuildAdminResponse guildAdmin = 29;

    ChatResponse chat = 30;

    StatusNotify statusNotify = 100;
}


// User Protocol
message UserLoginRequest {
    string user = 1;
    string passward = 2;
}

message UserLoginResponse {
    RESULT result = 1;
    string errormsg = 2;
    NUserInfo userinfo = 3;
}


message UserRegisterRequest
{
    string user = 1;
    string passward = 2;
}

message UserRegisterResponse {
    RESULT result = 1;
    string errormsg = 2;
}

message UserCreateCharacterRequest
{
    string name = 1;
    CHARACTER_CLASS class = 2;
}

message UserCreateCharacterResponse {
    RESULT result = 1;
    string errormsg = 2;
    repeated NCharacterInfo characters = 3;
}

message UserGameEnterRequest
{
    int32 characterIdx = 1;
}

message UserGameEnterResponse {
    RESULT result = 1;
    string errormsg = 2;

    NCharacterInfo character = 3;
}

message UserGameLeaveRequest
{
}

message UserGameLeaveResponse {
    RESULT result = 1;
    string errormsg = 2;
}

// Map Protocol
message MapCharacterEnterRequest
{
    int32 mapId = 1;
}

message MapCharacterEnterResponse
{
    int32 mapId = 1;
    repeated NCharacterInfo characters = 2;
}

message MapCharacterLeaveResponse
{
    int32 entityId = 1;
}

/// 地图实体同步
message MapEntitySyncRequest {
    NEntitySync entitySync = 1;
}
message MapEntitySyncResponse {
    repeated NEntitySync entitySyncs = 2;
}

/// 地图传送
message MapTeleportRequest {
    int32 teleporterId = 1;
}

/// 背包保存
message BagSaveRequest {
    NBagInfo bagInfo = 1;
}
message BagSaveResponse {
    RESULT result = 1;
    string errormsg = 2;
}

/// 购买道具
message ItemPurchaseRequest {
    int32 shopId = 1;
    int32 shopItemId = 2;
}
message ItemPurchaseResponse {
    RESULT result = 1;
    string errormsg = 2;
}

/// 装备穿脱
message ItemEquipRequest {
    int32 slot = 1;
    int32 itemId = 2;
    bool isPutOn = 3;
}
message ItemEquipResponse {
    RESULT result = 1;
    string errormsg = 2;
}

/// 任务系统
message QuestListRequest {
    // 列表拉取类型
    enum QUEST_LIST_TYPE {
        ALL = 0;
        IN_PROGRESS = 1;
        FINISHED = 2;
    }
    QUEST_LIST_TYPE listType = 1;
}
message QuestListResponse {
    RESULT result = 1;
    string errormsg = 2;
    repeated NQuestInfo quests = 3;
}

message QuestAcceptRequest {
    int32 questId = 1;
}
message QuestAcceptResponse {
    RESULT result = 1;
    string errormsg = 2;
    NQuestInfo quest = 3;
}

message QuestSubmitRequest {
    int32 questId = 1;
}
message QuestSubmitResponse {
    RESULT result = 1;
    string errormsg = 2;
    NQuestInfo quest = 3;
}

message QuestAbandonRequest {
    int32 questId = 1;
}
message QuestAbandonResponse {
    RESULT result = 1;
    string errormsg = 2;
}

/// 好友系统
// 添加好友请求
message FriendAddRequest {
    int32 fromId = 1;
    string fromName = 2;
    int32 toId = 3;
    string toName = 4;
}
message FriendAddResponse {
    RESULT result = 1;
    string errormsg = 2;
    FriendAddRequest request = 3;
}

message FriendListRequest {
}
message FriendListResponse {
    RESULT result = 1;
    string errormsg = 2;
    repeated NFriendInfo friends = 3;
}

message FriendRemoveRequest {
    int32 id = 1;
    int32 friendId = 2;
}
message FriendRemoveResponse {
    RESULT result = 1;
    string errormsg = 2;
    int32 id = 3;
}

/// 组队系统
message TeamInviteRequest {
    int32 teamId = 1;
    int32 fromId = 2;
    string fromName = 3;
    int32 toId = 4;
    string toName = 5;
}
message TeamInviteResponse {
    RESULT result = 1;
    string errormsg = 2;
    TeamInviteRequest request = 3;
}

message TeamInfoRequest{
}
message TeamInfoResponse {
    RESULT result = 1;
    string errormsg = 2;
    NTeamInfo teamInfo = 3;
}

message TeamLeaveRequest {
    int32 teamId = 1;
    int32 characterId = 2;
}
message TeamLeaveResponse {
    RESULT result = 1;
    string errormsg = 2;
    int32 characterId = 3;
}

/// 工会系统
message GuildCreateRequest {
    string guildName = 1;
    string guildNotice = 2;
}
message GuildCreateResponse {
    RESULT result = 1;
    string errormsg = 2;
    NGuildInfo guildInfo = 3;
}

message GuildJoinRequest {
    NGuildApplyInfo applyInfo = 1;
}
message GuildJoinResponse {
    RESULT result = 1;
    string errormsg = 2;
    NGuildApplyInfo applyInfo = 3;
}

message GuildListRequest {
}
message GuildListResponse {
    RESULT result = 1;
    string errormsg = 2;
    repeated NGuildInfo guilds = 3;
}

message GuildInfoRequest {
}
message GuildInfoResponse {
    RESULT result = 1;
    string errormsg = 2;
    NGuildInfo guildInfo = 3;
}

message GuildLeaveRequest {
}
message GuildLeaveResponse {
    RESULT result = 1;
    string errormsg = 2;
}

message GuildAdminRequest {
    enum GUILD_ADMIN_COMMAND {
        // 踢出
        DEPORT = 0;
        // 委任
        GRANT = 1;
        // 解任
        RELIVE = 2;
        // 转让
        CEDE = 3;
        // 更新宣言
        EDIT_NOTICE = 4;
    }
    GUILD_ADMIN_COMMAND command = 1;
    int32 target = 2;
    string notice = 3;
}
message GuildAdminResponse {
    RESULT result = 1;
    string errormsg = 2;
    GuildAdminRequest request = 3;
}

message ChatRequest {
    NChatMessage message = 1;
}
message ChatResponse {
    RESULT result = 1;
    string errormsg = 2;
    repeated NChatMessage localMessages = 3;
    repeated NChatMessage worldMessages = 4;
    repeated NChatMessage systemMessages = 5;
    repeated NChatMessage privateChatMessages = 6;
    repeated NChatMessage teamMessages = 7;
    repeated NChatMessage guildMessages = 8;
}
